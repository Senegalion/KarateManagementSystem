spring:
  application:
    name: notification-service
  cache:
    type: caffeine
  config:
    import: optional:configserver:http://localhost:8888
  #    import: optional:configserver:http://config-server:8888
  cloud:
    stream:
      default-binder: kafka
      bindings:
        user-events-in:
          destination: user-events
          group: notification-service
          binder: kafka
        enrollment-events-in:
          destination: enrollment-events
          group: notification-service
          binder: kafka
        feedback-events-in:
          destination: feedback-events
          group: notification-service
          binder: kafka
        springCloudBusInput:
          binder: rabbit
        springCloudBusOutput:
          binder: rabbit
  rabbitmq:
    host: localhost
    #    host: rabbitmq
    port: 5672
    username: guest
    password: guest

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.karate.notification_service.infrastructure.messaging.dto.EnrollmentEvent
        spring.json.use.type.headers: false

#  mail:
#    host: ${MAIL_HOST:localhost}
#    port: ${MAIL_PORT:3025}
#    username: ${MAIL_USERNAME:defaultUsername}
#    password: ${MAIL_PASSWORD:defaultPassword}
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
#      timeout: ${MAIL_PROPERTIES_TIMEOUT:5000}
#      connectiontimeout: ${MAIL_PROPERTIES_CONNECTION_TIMEOUT:5000}
#      writetimeout: ${MAIL_PROPERTIES_WRITE_TIMEOUT:5000}
